version: '3.8'

services:
  postgres:
    image: postgres
    container_name: postgres_host
    restart: on-failure
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - academia-spring
    tty: true


  pgadmin:
    container_name: pgadmin_host
    image: dpage/pgadmin4
    restart: unless-stopped
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT}:80"
    networks:
      - academia-spring
    links:
      - postgres
    depends_on:
      - postgres

  backend:
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "${BACK_PORT}:${BACK_PORT}"
    environment:
      DB_HOST: postgres
    stdin_open: true
    links:
      - postgres:postgres
    depends_on:
      - postgres
    networks:
      - academia-spring
    tty: true


networks:
  academia-spring:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data: